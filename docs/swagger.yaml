basePath: /api
definitions:
  handlers.LoginForm:
    properties:
      password:
        description: 密码
        example: "123123123"
        type: string
      username:
        description: 账号
        example: happyphper
        type: string
    required:
    - password
    - username
    type: object
  handlers.RegisterForm:
    properties:
      password:
        description: 密码
        example: "123123123"
        type: string
      username:
        description: 账号
        example: "18010021234"
        type: string
    required:
    - password
    - username
    type: object
  handlers.TodoForm:
    properties:
      title:
        type: string
    required:
    - title
    type: object
  models.Todo:
    properties:
      created_at:
        example: "2006-01-02 15:04:05"
        type: string
      id:
        example: 11012341234
        type: integer
      status:
        example: 1
        type: integer
      title:
        example: 完成TodoList布局
        type: string
      updated_at:
        example: "2006-01-02 15:04:05"
        type: string
    type: object
  response.Response:
    properties:
      code:
        description: |-
          状态码
          20000:成功
          40100:账号或密码不匹配
          40101:短信验证码错误
          40102:图形验证码错误
          40103:账号不存在
          40104:账号已存在
          42200:参数错误
        example: 20000
        type: integer
      data:
        description: 数据
        type: object
      message:
        description: 消息
        example: ok
        type: string
      meta:
        description: 额外数据
        type: object
    type: object
  response.TokenModel:
    properties:
      expires_in:
        description: 过期时间，时间戳
        example: 1618535532
        type: integer
      token:
        description: JWT Bearer Token
        example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c
        type: string
    type: object
host: 127.0.0.1:8080
info:
  contact: {}
  description: Test swagger api docs
  title: API Demo
  version: "1.0"
paths:
  /login:
    post:
      consumes:
      - application/json
      description: 登录接口，适用于账号、密码登录
      parameters:
      - description: JSON
        in: body
        name: username
        schema:
          $ref: '#/definitions/handlers.LoginForm'
      produces:
      - application/json
      responses:
        "200":
          description: desc
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                code:
                  type: integer
                data:
                  $ref: '#/definitions/response.TokenModel'
              type: object
      summary: 登录
      tags:
      - Auth
  /register:
    post:
      consumes:
      - application/json
      description: 适用于新账号注册
      parameters:
      - description: JSON
        in: body
        name: username
        schema:
          $ref: '#/definitions/handlers.RegisterForm'
      produces:
      - application/json
      responses:
        "200":
          description: desc
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                code:
                  type: integer
                data:
                  $ref: '#/definitions/response.TokenModel'
              type: object
      summary: 注册
      tags:
      - Auth
  /todos:
    get:
      consumes:
      - application/json
      description: 用于待办事项的列表展示，支持分页、筛选等
      parameters:
      - default: 1
        description: 页码
        in: query
        maximum: 100
        minimum: 1
        name: page
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: desc
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                code:
                  type: integer
                data:
                  items:
                    $ref: '#/definitions/models.Todo'
                  type: array
              type: object
      summary: 待办事项列表
      tags:
      - Todo
    post:
      consumes:
      - application/json
      description: 用于添加待办事项
      parameters:
      - description: Todo FormData
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/handlers.TodoForm'
      produces:
      - application/json
      responses:
        "200":
          description: desc
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                code:
                  type: integer
                data:
                  $ref: '#/definitions/models.Todo'
              type: object
      summary: 待办事项添加
      tags:
      - Todo
  /todos/{id}:
    delete:
      consumes:
      - application/json
      description: 用于待办事项删除
      parameters:
      - description: Todo id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: desc
          schema:
            $ref: '#/definitions/response.Response'
      summary: 待办事项删除
      tags:
      - Todo
    get:
      consumes:
      - application/json
      description: 用于待办事项的列表展示，支持分页、筛选等
      parameters:
      - description: Todo id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: desc
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                code:
                  type: integer
                data:
                  $ref: '#/definitions/models.Todo'
              type: object
      summary: 待办事项详情
      tags:
      - Todo
    put:
      consumes:
      - application/json
      description: 用于待办事项更新
      parameters:
      - description: Todo id
        in: path
        name: id
        required: true
        type: integer
      - description: Todo FormData
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/handlers.TodoForm'
      produces:
      - application/json
      responses:
        "200":
          description: desc
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                code:
                  type: integer
                data:
                  $ref: '#/definitions/models.Todo'
              type: object
      summary: 待办事项更新
      tags:
      - Todo
swagger: "2.0"
